#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        g {
            bindings = <&kp G>;
            key-positions = <42 14>;
            layers = <0>;
        };

        z {
            bindings = <&kp Z>;
            key-positions = <42 15>;
            layers = <0>;
        };

        n {
            bindings = <&kp D>;
            key-positions = <42 16>;
            layers = <0>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <42 17>;
            layers = <0>;
        };

        p {
            bindings = <&kp P>;
            key-positions = <42 5>;
            layers = <0>;
        };

        ann {
            bindings = <&ann>;
            key-positions = <47 25>;
        };
    };

    macros {
        ann: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp N &kp N>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC         &kp Q  &kp W  &kp R      &kp N               &kp F                                   &kp UP                &kp J             &kp U            &kp O         &kp L    &kp P     &kp LEFT_BRACKET
&mt LCTRL TAB   &kp K  &kp S  &kp T      &kp H               &kp M                         &kp LEFT  &kp ENTER  &kp RIGHT  &kp G             &kp I            &kp E         &kp A    &kp Y     &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V               &kp B           &bt BT_NXT              &kp DOWN              &kp MINUS         &kp D            &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                              &kp SPACE  &lt 1 INT_MUHENKAN  &kp INT_HENKAN                                                &lt 3 LA(K_UNDO)  &lt 2 BACKSPACE  &kp KP_ENTER
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans         &kp N1     &kp N2     &kp N3        &kp N4     &kp N5                                   &mmv MOVE_UP                     &kp N6        &kp N7       &kp N8         &kp N9    &kp N0         &kp AT_SIGN
&kp LS(LG(S))  &kp LC(K)  &kp LC(S)  &kp LC(D)     &kp LC(F)  &kp LC(G)                &mmv MOVE_LEFT  &none           &mmv MOVE_RIGHT  &kp LEFT      &mkp LCLK    &mkp MB3       &mkp MB2  &kp SEMICOLON  &kp COLON
&kp LG(TAB)    &kp LC(Z)  &kp LC(X)  &kp LC(C)     &kp LC(V)  &kp LC(B)  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp LC(K)     &kp PAGE_UP  &kp PAGE_DOWN  &td0      &kp SLASH      &kp NON_US_BACKSLASH
                                     &kp LEFT_GUI  &trans     &trans                                                                    &kp LA(LEFT)  &kp DEL      &kp LA(SPACE)
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
